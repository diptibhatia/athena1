<?php

use \Drupal\Core\Url;
use \Drupal\Core\Link;
use Drupal\node\Entity\Node;

/**
* Implements hook_mail().
*/
function athena_course_mail($key, &$message, $params) {
   switch ($key) {
     case 'news_subscription':
     case 'get_in_touch':
     case 'speak_to_advisor':
     case 'enquiry_submission':
        $message['headers'] = array(
          'MIME-Version' => "1.0",
          'Content-Type' => "text/html"
        );
        $message['from'] = \Drupal::config('system.site')->get('mail');
        $message['subject'] = $params['subject'];
        $message['body'][] = $params['message'];
        break;
   }
}

/**
 * Implements hook_theme().
 */
function athena_course_theme($existing, $type, $theme, $path) {
    return [
    'website_subscribe_popup' => [
      'variables' => [
        'subscribed' => NULL
      ],
    ],

    'short_term_course' => [
      'variables' => [
        'nodes' => NULL,
        'display_load_more' => NULL
      ],
    ],
    'course_banner' => [
      'variables' => [
      'course_title' => NULL,
      'ects_credit' => NULL,
      'univ_data' => NULL,
      'awarding_body' => NULL,
      'description' => NULL,
      'category' => NULL,
      'banner' => NULL,
      'node' => NULL,
      'base_path' => NULL,
      'campaign_params' => NULL
      ],
    ],

    'courselist' => [
      'variables' => [
      'nodeid' => NULL,
      'ects_credit' => NULL,
      'awarding_body' => NULL,
      'description' => NULL,
      'category' => NULL,
      'banner' => NULL,
      'node' => NULL,
      'base_path' => NULL,
      ],
    ],

     'smotq' => [
      'variables' => [
      'source' => NULL,
      'campaign' => NULL,
      'fname' => NULL,
      'lname' => NULL,
      'email' => NULL,
      'ccode' => NULL,
      'phone' => NULL,
      'node' => NULL,
      'base_path' => NULL,
      ],
    ],



'smo' => [
      'variables' => [
      'payment' => NULL,
      'course_title' => NULL,
      'ects_credit' => NULL,
      'awarding_body' => NULL,
      'description' => NULL,
      'category' => NULL,
      'source' => NULL,
      'campaign' => NULL,
      'banner' => NULL,
      'node' => NULL,
      'base_path' => NULL,
      'overview' => NULL,
      'testi' => NULL,
      'node' => NULL,
      'total_fee' => NULL,
      'fees_pay_per' => NULL,
      'course_team' => NULL,
      'faq' => NULL,
      'univ_data' => NULL,
      'course_title' => NULL,
      'why_course' => NULL,
      'duration' => NULL,
      'certification_label' => NULL,
      'certification' => NULL,
      'accreditations' => NULL,
      'course_details' => NULL,
      'course_modules' => NULL,
      'total_credits' => NULL,
      'academic_route' => NULL,
      'academic_route_desc' => NULL,
      'mature_entry_label' => NULL,
      'mature_entry_desc' => NULL,
      'language_prof_label' => NULL,
      'language_prof_desc' => NULL,
      'why_athena' => NULL,

      ],
    ],


     'discussions' => [
      'variables' => [
      'course_title' => NULL,
      'discussions' => NULL,
      'course_title' => NULL,
      'ects_credit' => NULL,
      'awarding_body' => NULL,
      'description' => NULL,
      'category' => NULL,
      'banner' => NULL,
      'node' => NULL,
      'base_path' => NULL,
      ],
    ],
     'discussions_detail' => [
      'variables' => [
      'course_title' => NULL,
      'discussion' => NULL,
      'post' => NULL,
      'ects_credit' => NULL,
      'awarding_body' => NULL,
      'description' => NULL,
      'category' => NULL,
      'banner' => NULL,
      'node' => NULL,
      'base_path' => NULL,
      ],
    ],
    'course_homepage_tabs' => [
      'variables' => [
      'academic' => NULL,
      'certifications' => NULL,
      'micro' => NULL,
      'ects_credit' => NULL,
      'awarding_body' => NULL,
      'description' => NULL,
      'category' => NULL,
      'banner' => NULL,
      'node' => NULL,
      'acaddesc' => NULL,
      'microdesc' => NULL,
      'cerdesc' => NULL,
      'base_path' => NULL,
      ],
    ],

    'course_description_tabs' => [
      'variables' => [
      'overview' => NULL,
      'testi' => NULL,
      'node' => NULL,
      'total_fee' => NULL,
      'fees_pay_per' => NULL,
      'course_team' => NULL,
      'course_batch' => NULL,
      'faq' => NULL,
      'univ_data' => NULL,
      'course_title' => NULL,
      'why_course' => NULL,
      'duration' => NULL,
      'certification_label' => NULL,
      'certification' => NULL,
      'accreditations' => NULL,
      'course_details' => NULL,
      'course_modules' => NULL,
      'total_credits' => NULL,
      'academic_route' => NULL,
      'academic_route_desc' => NULL,
      'mature_entry_label' => NULL,
      'mature_entry_desc' => NULL,
      'language_prof_label' => NULL,
      'language_prof_desc' => NULL,
      'why_athena' => NULL,
      'tax_value' => NULL,
      'base_path' => NULL,
      'campaign_params' => NULL
      ],
    ],

    'course_search' => [
      'variables' => [
      'overview' => NULL,
      'node' => NULL,
      'count' => NULL,
      'duration' => NULL,
      'search_key' => NULL,
      'partner_list' => NULL,
      'accreditations' => NULL,
      'course_details' => NULL,
      'course_modules' => NULL,
      'total_credits' => NULL,
      'academic_route' => NULL,
      'academic_route_desc' => NULL,
      'mature_entry_label' => NULL,
      'mature_entry_desc' => NULL,
      'language_prof_label' => NULL,
      'language_prof_desc' => NULL,
      'why_athena' => NULL,
 'nids' => NULL,
      'base_path' => NULL,
      ],
    ],


 'course_academic' => [
      'variables' => [
      'overview' => NULL,
      'title1' => NULL,
      'title2' => NULL,
      'desc' => NULL,
      'header_image' => NULL,
      'paragraph' => NULL,
      'insig' => NULL,
      'last_insight'=> NULL,
      'course_list' => NULL,
      'course_details' => NULL,
      'course_modules' => NULL,
      'total_credits' => NULL,
      'academic_route' => NULL,
      'academic_route_desc' => NULL,
      'mature_entry_label' => NULL,
      'mature_entry_desc' => NULL,
      'language_prof_label' => NULL,
      'language_prof_desc' => NULL,
      'why_athena' => NULL,
      'nids' => NULL,
      'base_path' => NULL,
      ],
    ],
  'popular_course' => [
      'variables' => [
      'base_path' => NULL,
      'course' => NULL,
      ],
    ],
    'latest_insights_sidebar' => [
      'variables' => [
      'base_path' => NULL,
      'insig' => NULL,
      'popular' => NULL,
      'univ_popular' => NULL,
      ],
    ],
    'our_popular_courses' => [
      'variables' => [
      'base_path' => NULL,
      'popular' => NULL,
      'univ_popular' => NULL,
      ],
    ],

    'homepage_testimonials' => [
      'variables' => [
      'base_path' => NULL,
      'testi' => NULL,
      ],
    ],
    'coursepage_testimonials' => [
      'variables' => [
      'base_path' => NULL,
      'testi' => NULL,
      ],
    ],
    'popular_insights' => [
      'variables' => [
      'base_path' => NULL,
      'popu' => NULL,
      ],
    ],
    'mba_program_courses' => [
      'variables' => [
      'base_path' => NULL,
      'course' => NULL,
      ],
    ],

    'certification_program_courses' => [
      'variables' => [
      'base_path' => NULL,
      'course' => NULL,
      ],
    ],
    'event_page' => [
      'variables' => [
      'upcoming' => NULL,
      'past' => NULL,
      'base_path' => NULL,
      ],
    ],
    'course_registration' => [
      'variables' => [
      'base_path' => NULL,
      'source' => NULL,
      'campaign' => NULL,
      'cid' => NULL,
      'fname' => NULL,
      'lname' => NULL,
      'email' => NULL,
      'ccode' => NULL,
      'phone' => NULL,
      'nodes' => NULL,
      ],
    ],
    'universities' => [
      'variables' => [
      'base_path' => NULL,
      'insig' => NULL,
      'last_insight' => NULL,
      'nodes' => NULL,
      ],
    ],

     'university' => [
      'variables' => [
      'base_path' => NULL,
      'data' => NULL,
      'univ_data' => NULL,
      'nodes' => NULL,
      ],
    ],


 'course_list' => [
      'variables' => [
      'base_path' => NULL,
      ],
    ],



  ];
}


function athena_course_page_attachments(array &$attachments) {
    $route_name = \Drupal::routeMatch()->getRouteName();
    if ($route_name == 'athena_smo.smo') {
      $attachments['#attached']['library'][] = 'athena_course/athena_course';
    }

    $account = \Drupal::currentUser();
    if ($account->id() != 1) {
      $attachments['#attached']['library'][] = 'athena_course/cuddly-slider';
    }

    // Custom meta tags on smo and course pages.
    if ($route_name == 'athena_course.course' || $route_name == 'athena_smo.smo') {
      $possible_parameters = \Drupal::routeMatch()->getParameters();
      $possible_parameters_obj = $possible_parameters->all();
      $nid = $possible_parameters_obj['nid'];
      $node = Node::load($nid);
      $course_category = $node->get('field_course_category')->value;
      if ($course_category == 'Academic') {
        $field1 = 'field_course_page_meta_tag';
        $field2 = 'field_course_page_meta_descripti';
        $field3 = 'field_course_page_meta_keywords';
      }
      if ($course_category == 'Certifications') {
        $field1 = 'field_smo_page_meta_tag_title';
        $field2 = 'field_smo_page_meta_tag_descript';
        $field3 = 'field_smo_page_meta_tag_keywords';
      }
      $meta_tag_value = $node->get($field1)->value;
      $meta_tag_desc = $node->get($field2)->value;
      $meta_tag_keywords = array();
      foreach ($node->{$field3}->getValue() as $value) {
        if (!empty($value['value'])) {
          $meta_tag_keywords[] = $value['value'];
        }
      }
      if (count($meta_tag_keywords) > 0) {
        $meta_tag_keywords_list = implode(',', $meta_tag_keywords);
      }
      if (!empty($meta_tag_value)) {
        $attachments['#attached']['html_head'][] = [
          [
            '#type' => 'html_tag',
            '#tag' => 'title',
            '#value' => $meta_tag_value,
            '#weight' => -11,
          ],
          'title'
        ];
      }
      if (!empty($meta_tag_desc)) {
        $attachments['#attached']['html_head'][] = [
          [
            '#type' => 'html_tag',
            '#tag' => 'meta',
            '#attributes' => [
              'name' => 'description',
              'content' => $meta_tag_desc
            ],
            '#weight' => -10,
          ],
          'desc'
        ];
      }
      if (!empty($meta_tag_keywords_list)) {
        $attachments['#attached']['html_head'][] = [
          [
            '#type' => 'html_tag',
            '#tag' => 'meta',
            '#attributes' => [
              'name' => 'keywords',
              'content' => $meta_tag_keywords_list
            ],
            '#weight' => -9,
          ],
          'keywords'
        ];
      }
    }

    if ($route_name == 'athena_course.StudentEnroltoCourse') {
      $from = $_REQUEST['from'] ?? '';
      $uid = $_REQUEST['UId'] ?? '';
      $cid = $_REQUEST['CId'] ?? '';
      $modId = $_REQUEST['ModId'] ?? '';
      $mail = $_REQUEST['mail'] ?? '';
      $source = $_REQUEST['source'] ?? '';
      if (!empty($cid)) {
        $referer = $_SERVER['HTTP_REFERER'];
        $enablePixel = TRUE;
        if ((strpos($referer, 'pgcertificateEnrol') !== false) || (strpos($referer, 'diplomaEnrol') !== false) ) {
            $enablePixel = FALSE;
        }

        $enableSalePixel = FALSE;
        if ((strpos($referer, 'MBAPrograms') !== false) || (strpos($referer, 'diploma') !== false) || (strpos($referer, 'pgcertificate') !== false) ) {
            $enableSalePixel = TRUE;
        }
        if ($source == 'TradeTracker') {
          // Sale Pixel.
          $salePixel1 = "var ttConversionOptions = ttConversionOptions || [];
           ttConversionOptions.push({
            type: 'lead',
            campaignID: '33930',
            productID: '53036',
            transactionID: '$uid',
            descrMerchant: '',
            descrAffiliate: ''
           });";
          $attachments['#attached']['html_head'][] = [
            [
              '#tag' => 'script',
              '#value' => \Drupal\Core\Render\Markup::create($salePixel1),
              '#weight' => 111,
            ],
            'sale1'
          ];

          $salePixel2 = "<img src='//tl.tradetracker.net/?cid=33930&amp;pid=53036&amp;tid=$uid&amp;data=&amp;descrMerchant=&amp;descrAffiliate=&amp;event=lead' alt='' />";
          $attachments['#attached']['html_head'][] = [
            [
              '#tag' => 'noscript',
              '#value' => \Drupal\Core\Render\Markup::create($salePixel2),
              '#weight' => 112,
            ],
            'sale2'
          ];

          $salePixel3 = "// No editing needed below this line.
           (function(ttConversionOptions) {
            var campaignID = 'campaignID' in ttConversionOptions ? ttConversionOptions.campaignID : ('length' in ttConversionOptions && ttConversionOptions.length ? ttConversionOptions[0].campaignID : null);
            var tt = document.createElement('script'); tt.type = 'text/javascript'; tt.async = true; tt.src = '//tm.tradetracker.net/conversion?s=' + encodeURIComponent(campaignID) + '&t=m';
            var s = document.getElementsByTagName('script'); s = s[s.length - 1]; s.parentNode.insertBefore(tt, s);
           })(ttConversionOptions);";
          $attachments['#attached']['html_head'][] = [
            [
              '#tag' => 'script',
              '#value' => \Drupal\Core\Render\Markup::create($salePixel3),
              '#weight' => 113,
            ],
            'sale3'
          ];
        }

        if ($source == 'ShareASale' && $enablePixel) {
          // ShareASale Pixel.
          $shareASalePixel = '<img src="https://www.shareasale.com/sale.cfm?tracking=' . $uid . '&amount=0.00&merchantID=102553&transtype=lead" width="1" height="1">';
          $attachments['#attached']['html_head'][] = [
            [
              '#tag' => '',
              '#value' => \Drupal\Core\Render\Markup::create($shareASalePixel),
              '#weight' => 10,
            ],
            'shareasale'
          ];
        }

        if ($source == 'KWANKO') {
          // Kwanko Pixel.
          $kwankoPixel = '<img src="https://action.metaffiliation.com/trk.php?mclic=G51165D1011&argann=' . $uid . '&altid=' . $mail . '" width="1" height="1" border="0" />';
          $attachments['#attached']['html_head'][] = [
            [
              '#tag' => '',
              '#value' => \Drupal\Core\Render\Markup::create($kwankoPixel),
              '#weight' => 10,
            ],
            'kwanko'
          ];
        }

        if ($source == 'BIGTRUNK') {
          // Big Trunk Pixel.
          $bigTrunkPixel = '<img src="https://bigtrunk.o18.click/p?mid=3476&t=i&oid=7967214" width="0px" height="0px">';
          $attachments['#attached']['html_head'][] = [
            [
              '#tag' => '',
              '#value' => \Drupal\Core\Render\Markup::create($bigTrunkPixel),
              '#weight' => 10,
            ],
            'bigTrunk'
          ];
        }

        $welionadsPixelPages = [
          'MBAPrograms',
          'pgcertificateEnrol',
          'diplomaEnrol',
          'CMIProgramsEnrol'
        ];
        if (in_array($referer, $welionadsPixelPages) && $source == 'WELIONADS') {
          // WELIONADS Pixel.
          $welionadsPixel = '<img src="https://welionads.g2afse.com/success.jpg?offer_id=10&afid=' . $uid . '&afprice=&afgoal=2&afstatus=2&afsecure=6dfdd6e685a97b186be752702066b5f0" height="1" width="1" alt=""/>';
          $attachments['#attached']['html_head'][] = [
            [
              '#tag' => '',
              '#value' => \Drupal\Core\Render\Markup::create($welionadsPixel),
              '#weight' => 10,
            ],
            'welionads'
          ];
        }


        if (strpos($referer, 'MBAPrograms') !== false) {

          if ($source == 'ENCYLDIGITAL') {
            // ENCYL DIGITAL Pixel.
            $encylPixel = '<img src="http://encyl.offerstrack.net/pixelBack.php?offer_id=3609&adv_id=2132" width="1" height="1" />';
            $attachments['#attached']['html_head'][] = [
              [
                '#tag' => '',
                '#value' => \Drupal\Core\Render\Markup::create($encylPixel),
                '#weight' => 10,
              ],
              'encyl'
            ];
          }

          if ($source == 'MONETISEUK') {
            // Monetize pixel.
            $monetizePixel = '<iframe src="https://monetisetrk.co.uk/p.ashx?o=6101&e=1068&t=' . $uid . '" height="1" width="1" frameborder="0"></iframe>';
            $attachments['#attached']['html_head'][] = [
              [
                '#tag' => '',
                '#value' => \Drupal\Core\Render\Markup::create($monetizePixel),
                '#weight' => 10,
              ],
              'monetize'
            ];
          }

          if ($source == 'NOBBYMEDIA') {
            // NobbyMedia pixel.
            $nobbyMediaPixel = '<img src="https://nobbymedia10917966.o18.click/p?mid=5246&t=i&gb=1" width="0px" height="0px">';
            $attachments['#attached']['html_head'][] = [
              [
                '#tag' => '',
                '#value' => \Drupal\Core\Render\Markup::create($nobbyMediaPixel),
                '#weight' => 10,
              ],
              'nobbymedia'
            ];
          }

        }


        if (!empty($from) && $from == 'affiliate') {
          if (!empty($uid)) {
           $url = get_static_data('ulearn_portal_url') . "StudentEnroltoCourse?UId=$uid&CId=$cid&ModId=$modId&source=$source";
          }
          if (!empty($mail)) {
            $url = get_static_data('ulearn_portal_url') . "login?mail=$mail&CId=$cid&source=$source";
          }
        }
        else {
          $url = get_static_data('ulearn_portal_url') . "login?mail=$mail&CId=$cid&source=$source";
        }


        $redirect = "<meta http-equiv='refresh' content='3;url=$url' />";
        $attachments['#attached']['html_head'][] = [
          [
            '#tag' => '',
            '#value' => \Drupal\Core\Render\Markup::create($redirect),
            '#weight' => -10,
          ],
          'ulearn_redirect'
        ];

      }
    }
}

/**
 * Get University link.
 */

function get_university_link($awarding_body) {
    $univName = $awarding_body;
    $database = \Drupal::database();
    $query = $database->select('node_field_data', 'nfd');
    $query->leftJoin('node__field_university_key', 'nfu', 'nfu.entity_id = nfd.nid');
    $query->condition('nfd.title', $univName);
    $query->fields('nfu', ['field_university_key_value']);
    $result = $query->execute();
    $data = $result->fetchAll();
    $link = $awarding_body;
    if (count($data) > 0) {
      $dataArr = reset($data);
      $universitykey = $dataArr->field_university_key_value;
      $url = Url::fromRoute('athena_course.university', ['univ' => $universitykey]);
      $link = Link::fromTextAndUrl($awarding_body, $url);
    }
    return $link;
}

function getCountryflag($country) {

        // "Country code to name" array.
$countries = array( "BD" => "Bangladesh", "BE" => "Belgium", "BF" => "Burkina Faso", "BG" => "Bulgaria", "BA" => "Bosnia and Herzegovina", "BB" => "Barbados", "WF" => "Wallis and Futuna", "BL" => "Saint Barthelemy", "BM" => "Bermuda", "BN" => "Brunei", "BO" => "Bolivia", "BH" => "Bahrain", "BI" => "Burundi", "BJ" => "Benin", "BT" => "Bhutan", "JM" => "Jamaica", "BV" => "Bouvet Island", "BW" => "Botswana", "WS" => "Samoa", "BQ" => "Bonaire, Saint Eustatius and Saba ", "BR" => "Brazil", "BS" => "Bahamas", "JE" => "Jersey", "BY" => "Belarus", "BZ" => "Belize", "RU" => "Russia", "RW" => "Rwanda", "RS" => "Serbia", "TL" => "East Timor", "RE" => "Reunion", "TM" => "Turkmenistan", "TJ" => "Tajikistan", "RO" => "Romania", "TK" => "Tokelau", "GW" => "Guinea-Bissau", "GU" => "Guam", "GT" => "Guatemala", "GS" => "South Georgia and the South Sandwich Islands", "GR" => "Greece", "GQ" => "Equatorial Guinea", "GP" => "Guadeloupe", "JP" => "Japan", "GY" => "Guyana", "GG" => "Guernsey", "GF" => "French Guiana", "GE" => "Georgia", "GD" => "Grenada", "GB" => "United Kingdom", "GA" => "Gabon", "SV" => "El Salvador", "GN" => "Guinea", "GM" => "Gambia", "GL" => "Greenland", "GI" => "Gibraltar", "GH" => "Ghana", "OM" => "Oman", "TN" => "Tunisia", "JO" => "Jordan", "HR" => "Croatia", "HT" => "Haiti", "HU" => "Hungary", "HK" => "Hong Kong", "HN" => "Honduras", "HM" => "Heard Island and McDonald Islands", "VE" => "Venezuela", "PR" => "Puerto Rico", "PS" => "Palestinian Territory", "PW" => "Palau", "PT" => "Portugal", "SJ" => "Svalbard and Jan Mayen", "PY" => "Paraguay", "IQ" => "Iraq", "PA" => "Panama", "PF" => "French Polynesia", "PG" => "Papua New Guinea", "PE" => "Peru", "PK" => "Pakistan", "PH" => "Philippines", "PN" => "Pitcairn", "PL" => "Poland", "PM" => "Saint Pierre and Miquelon", "ZM" => "Zambia", "EH" => "Western Sahara", "EE" => "Estonia", "EG" => "Egypt", "ZA" => "South Africa", "EC" => "Ecuador", "IT" => "Italy", "VN" => "Vietnam", "SB" => "Solomon Islands", "ET" => "Ethiopia", "SO" => "Somalia", "ZW" => "Zimbabwe", "SA" => "Saudi Arabia", "ES" => "Spain", "ER" => "Eritrea", "ME" => "Montenegro", "MD" => "Moldova", "MG" => "Madagascar", "MF" => "Saint Martin", "MA" => "Morocco", "MC" => "Monaco", "UZ" => "Uzbekistan", "MM" => "Myanmar", "ML" => "Mali", "MO" => "Macao", "MN" => "Mongolia", "MH" => "Marshall Islands", "MK" => "Macedonia", "MU" => "Mauritius", "MT" => "Malta", "MW" => "Malawi", "MV" => "Maldives", "MQ" => "Martinique", "MP" => "Northern Mariana Islands", "MS" => "Montserrat", "MR" => "Mauritania", "IM" => "Isle of Man", "UG" => "Uganda", "TZ" => "Tanzania", "MY" => "Malaysia", "MX" => "Mexico", "IL" => "Israel", "FR" => "France", "IO" => "British Indian Ocean Territory", "SH" => "Saint Helena", "FI" => "Finland", "FJ" => "Fiji", "FK" => "Falkland Islands", "FM" => "Micronesia", "FO" => "Faroe Islands", "NI" => "Nicaragua", "NL" => "Netherlands", "NO" => "Norway", "NA" => "Namibia", "VU" => "Vanuatu", "NC" => "New Caledonia", "NE" => "Niger", "NF" => "Norfolk Island", "NG" => "Nigeria", "NZ" => "New Zealand", "NP" => "Nepal", "NR" => "Nauru", "NU" => "Niue", "CK" => "Cook Islands", "XK" => "Kosovo", "CI" => "Ivory Coast", "CH" => "Switzerland", "CO" => "Colombia", "CN" => "China", "CM" => "Cameroon", "CL" => "Chile", "CC" => "Cocos Islands", "CA" => "Canada", "CG" => "Republic of the Congo", "CF" => "Central African Republic", "CD" => "Democratic Republic of the Congo", "CZ" => "Czech Republic", "CY" => "Cyprus", "CX" => "Christmas Island", "CR" => "Costa Rica", "CW" => "Curacao", "CV" => "Cape Verde", "CU" => "Cuba", "SZ" => "Swaziland", "SY" => "Syria", "SX" => "Sint Maarten", "KG" => "Kyrgyzstan", "KE" => "Kenya", "SS" => "South Sudan", "SR" => "Suriname", "KI" => "Kiribati", "KH" => "Cambodia", "KN" => "Saint Kitts and Nevis", "KM" => "Comoros", "ST" => "Sao Tome and Principe", "SK" => "Slovakia", "KR" => "South Korea", "SI" => "Slovenia", "KP" => "North Korea", "KW" => "Kuwait", "SN" => "Senegal", "SM" => "San Marino", "SL" => "Sierra Leone", "SC" => "Seychelles", "KZ" => "Kazakhstan", "KY" => "Cayman Islands", "SG" => "Singapore", "SE" => "Sweden", "SD" => "Sudan", "DO" => "Dominican Republic", "DM" => "Dominica", "DJ" => "Djibouti", "DK" => "Denmark", "VG" => "British Virgin Islands", "DE" => "Germany", "YE" => "Yemen", "DZ" => "Algeria", "US" => "United States", "UY" => "Uruguay", "YT" => "Mayotte", "UM" => "United States Minor Outlying Islands", "LB" => "Lebanon", "LC" => "Saint Lucia", "LA" => "Laos", "TV" => "Tuvalu", "TW" => "Taiwan", "TT" => "Trinidad and Tobago", "TR" => "Turkey", "LK" => "Sri Lanka", "LI" => "Liechtenstein", "LV" => "Latvia", "TO" => "Tonga", "LT" => "Lithuania", "LU" => "Luxembourg", "LR" => "Liberia", "LS" => "Lesotho", "TH" => "Thailand", "TF" => "French Southern Territories", "TG" => "Togo", "TD" => "Chad", "TC" => "Turks and Caicos Islands", "LY" => "Libya", "VA" => "Vatican", "VC" => "Saint Vincent and the Grenadines", "AE" => "United Arab Emirates", "AD" => "Andorra", "AG" => "Antigua and Barbuda", "AF" => "Afghanistan", "AI" => "Anguilla", "VI" => "U.S. Virgin Islands", "IS" => "Iceland", "IR" => "Iran", "AM" => "Armenia", "AL" => "Albania", "AO" => "Angola", "AQ" => "Antarctica", "AS" => "American Samoa", "AR" => "Argentina", "AU" => "Australia", "AT" => "Austria", "AW" => "Aruba", "IN" => "India", "AX" => "Aland Islands", "AZ" => "Azerbaijan", "IE" => "Ireland", "ID" => "Indonesia", "UA" => "Ukraine", "QA" => "Qatar", "MZ" => "Mozambique" );

  //print $country; exit;
  foreach ($countries as $key => $value) {
    if ( $country == $value ){
      return 'https://ipdata.co/flags/'.strtolower($key).'.png';
    }
  }

  }

/**
 * Get Universtiy svg logo from entity id
 */
  function getUniversityWhiteLogo($entity_id) {
    if(empty($entity_id) || $entity_id == 0) {
      return '';
    }
    $university_node = Node::load($entity_id);
    if(is_object($university_node->field_white_logo->entity)) {
      return file_create_url($university_node->field_white_logo->entity->getFileUri());
    }
    return '';
  }

  /**
 * Get Universtiy logo from entity id
 */
function getUniversityLogo($entity_id) {
  if(empty($entity_id) || $entity_id == 0) {
    return '';
  }
  $university_node = Node::load($entity_id);
  if(is_object($university_node->field_logo->entity)) {
    return file_create_url($university_node->field_logo->entity->getFileUri());
  }
  return '';
}
